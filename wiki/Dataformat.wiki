#summary Beskrivelse af dataformatet til plotteren

= Dataformat =

Vi har brug for en række instruktioner, som beskriver, hvad vi skal
gøre med vores hardware. Jeg (Kristian) ser, at vi mindst har brug for
følgende instruktioner:

  * Flyt x-akse-motor frem
  * Flyt x-akse-motor tilbage
  * Flyt y-akse-motor frem
  * Flyt y-akse-motor tilbage
  * Sænk skrivehovedet
  * Løft skrivehovedet

Derudover er det praktisk med følgende instruktioner:

  * Begynd tegning
  * Slut tegning
  * Nul-instruktion (tom instruktion)

Følgende instruktioner kan reducere instruktionsfilens størrelse:

  * Begynd løkke (efter fulgt af X antal bits, som indikerer det antal gange, løkken skal køres)
  * Afslut løkke

Vi har altså 11 forskellige instruktioner, som der skal være plads til
i hver instruktionsenhed. Vi er altså nødt til at bruge 4 bits for at
have plads til alle instruktionerne i en instruktionsenhed. Med 4 bits
har vi plads til 16 (2^4^) instruktioner, og vi har derfor 5 pladser
til overs. Disse instruktioner kan evt. bruges til senere.


= Instruktionsfilen =

Vi skal have et program, der kan generere vores instruktionsfil. Ellers skal vi hardcode en instruktionsfil, og det gider jeg (Kristian) ikke.


= Dataoverførsel =

Vi har følgende muligheder for at få data på chippen: Dataene kan

  * hardcores ind i chippen
  * sendes via serielt kabel til chippen
  * lagres på hukommelseskort og læses fra chippen

*Hardcodede data* i chippen er en rigtig dårlig ide. Så skal vi
 manuelt lave instruktionerne (tegningen) og kompilere dataene ind i
 et program. Så kan maskinen kun tegne én tegning uden at blive
 programmeret igen.

*Serielt overførte data* kræver meget computerkommunikation. Måske
 fylder computerdelen for meget i denne proces.

*Data lagret på hukommelseskort* kræver hardware til hukommelseskort.